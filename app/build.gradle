apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.dharkael.tweeter"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

ext {

    dagger_version = "2.10"
    retrofit_version = "2.3.0"
    android_arch_version = "1.0.0-alpha1"
    rxjava_version = "2.0.9"
    support_version = "25.3.1"
    mockito_version = "2.8.9"

}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:design:$support_version"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'


    //Lifecycles, LiveData, and ViewModel
    compile "android.arch.lifecycle:runtime:$android_arch_version"
    compile "android.arch.lifecycle:extensions:$android_arch_version"
    annotationProcessor "android.arch.lifecycle:compiler:$android_arch_version"
    testCompile "android.arch.core:core-testing:$android_arch_version"
    //Room
    compile "android.arch.persistence.room:runtime:$android_arch_version"
    compile "android.arch.persistence.room:rxjava2:$android_arch_version"
    annotationProcessor "android.arch.persistence.room:compiler:$android_arch_version"
    // rx
    compile "io.reactivex.rxjava2:rxjava:$rxjava_version"

    //retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    //This next would normally be testCompile but we include it in the app
    // So we can fake network calls
    compile "com.squareup.retrofit2:retrofit-mock:$retrofit_version"

    //dagger
    compile "com.google.dagger:dagger:$dagger_version"
    compile "com.google.dagger:dagger-android:$dagger_version"
    compile "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"


    testCompile 'junit:junit:4.12'
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.1'
    androidTestCompile "org.mockito:mockito-core:$mockito_version"
    androidTestCompile "org.mockito:mockito-android:$mockito_version"


}
